 * 进程:今晨是具有一定功能的程序和某些数据的一次执行，是操作系统进程资源分配和保护的基本单位。
 * 线程：是进程的实体，是CPU进行任务调度和分配的基本单位。
 * 区别：一个进程至少包含一个线程。进程在执行过程中拥有独立的内存单位，而线程则可以贡献进程的内存。
 * 
 * 线程的同步方式
 * 1.互斥量：多个线程对公共资源进行访问时，只有获得了互斥对象的线程才能对资源进行访问，而没有获得互斥对象的线程则进入等待/阻塞状态。
 * 2.信号量：同一时刻可以有多个线程同时对共享资源进行访问，但是对共享资源的访问有一个最大的限制。
 * 3.事件(信号)：通过使用通知使的操作方式来保持多线程之间的同步。
 * 
 * 进程间通信方式
 * 1.共享内存：进程之间互相共享内存，当一个进程对内存中的数据做出修改时，另外的进程能够看得见。
 * 2.信号量量：互斥量作为进程和线程之间同步的一种实现方式。
 * 3.管道：通过对管道的读和写来实现进程之间的通信。
 * 4.消息队列：通过对消息队列的读和写来实现进程之间的通信。
 * 5.信号：信号是一种比较复杂的通信机制，用于接收通知进程某个事件已经发生。
 * 6.套接字：在网络间进程之间的通信。
 * 
 * 死锁：两个或者两个以上的进程保持着某种资源而又等待着其他进程释放它或者保持着的资源，在不改变这种状态的情况下，无法继续向前推进，则称
 * 这组进程产生了死锁。通俗的来说就是进程之间无期限的互相等待或者阻塞下去。
 * 
 * 死锁产生的四个必要条件：
 * 1.互斥条件：必须有存在着某种资源是共享资源，即某一时刻只能有一个进程可以使用该资源，其他线程必须等待该资源被释放为止，才能使用该资源。
 * 2.占有并等待：一个进程占有某个资源，并等待另一个资源，该资源为另一个进程所占有。
 * 3.非抢占式：进程所拥有的资源不能被抢占，只能等待进程不在使用之后才能使用该资源。
 * 4.循环等待：若干个进程之间形成一种头尾相接的环形等待资源关系。
 * 
 * 死锁的处理基本策略和常用方法
 * 预防死锁、避免死锁、解除死锁
 * (一)预防死锁：预防死锁就是，确保死锁发生的四个必要条件中至少有一个不成立。
 * 1.打破互斥条件：即同一时刻允许多个进程访问该共享资源，但是某些情况下，共享资源只能被一个进程所访问，这是由该资源的属性决定的。
 * 2.打破占有等待条件：可以采用资源预先分配策略，即进程向操作系统一次性提交所需的资源，当系统的资源不满足时不给改进程提供资源，直到系统资源满足进程所需时才分配给该进程。
 * 3.打破非抢占试条件：允许进程强行从其他进程里夺取某些资源。
 * 4.打破循环等待条件：可以通过资源的有序分配策略。对所有的资源进行排序编号，所有进程对资源的请求必须严格按照资源序号来顺序提出，即只有占有了小号资源才能申请大号资源，不着便不会产生环路，预防死锁的发生。
 * 
 * (二)避免死锁：动态的检测资源分配状态，以确保循环等待条件不成立，从而确保系统处于安全状态。所谓安全状态是指-如果系统能按某个顺序为每个进程分配资源，那么系统是安全的。
 * 资源分配图算法和银行家算法。
 * 
 * (三)死锁解除
 * 死锁解除的两种方式为进程终止和资源抢占。进程终止是指简单的终止一个或多个进程打破循环等待，包括两种方式：终止所有的死锁/一次只终止一个进程直到取消死锁环为止。
 * 资源抢占是指从死锁进程里抢占一个或者多个资源，此时需要考虑的三个问题：1.选择一个牺牲品 2.回滚：回滚到一个安全状态3.饥饿：在代价因素中加上回滚次数，回滚的次数越多测越不可能继续呗选为牺牲品，避免
 * 一个进程总是被回滚。
